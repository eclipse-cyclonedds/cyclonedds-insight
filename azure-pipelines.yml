#
# Copyright(c) 2024 Sven Trittler
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
# v. 1.0 which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause

trigger: [ '*' ]
pr: [ '*' ]

variables:
  PY_VERSION: "3.9"

jobs:
- job: BuildCyclone
  pool:
    vmImage: $(image)
  strategy:
    matrix:
      #'Ubuntu_20.04_LTS_x64':
      #  image: ubuntu-20.04
      'macOS_13_x64':
        image: macOS-13
      #'Windows_Server_2019_x64':
      #  image: windows-2019
  steps:
    - task: UsePythonVersion@0
      displayName: Fetch Python
      inputs:
        versionSpec: $(PY_VERSION)
    
    # Build CycloneDDS
    - bash: |
        mkdir -p deps
        cd deps
        git clone https://github.com/eclipse-cyclonedds/cyclonedds.git --branch master
      name: clone_cyclone
      displayName: Clone the CycloneDDS repository
    - bash: |
        set -e -x
        cd deps/cyclonedds
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=./install \
              -DENABLE_SSL=off -DENABLE_SECURITY=off ..
        cmake --build . --config Release --target install --parallel
      name: cyclonedds_build
      displayName: Build CycloneDDS
    
    # Build CycloneDDS-Python
    - bash: |
        cd deps
        git clone https://github.com/eclipse-cyclonedds/cyclonedds-python.git --branch master
      name: clone_cyclone_python
      displayName: Clone the CycloneDDS-Python repository
    - bash: |
        set -e -x
        ls -al
        export CYCLONEDDS_HOME=$PWD/deps/cyclonedds/build/install
        cd deps
        cd cyclonedds-python
        python -m pip install -e .
      name: cyclonedds_python_build
      displayName: Build CycloneDDS-Python
    
    # Build CycloneDDS-Insight
    - bash: |
        set -e -x
        ls -al
        export CYCLONEDDS_HOME=$PWD/deps/cyclonedds/build/install
        export CYCLONEDDS_PYTHON_HOME=$PWD/deps/cyclonedds-python
        export PATH=$PATH:$CYCLONEDDS_HOME/bin
        python -m pip install -r ./requirements.txt && \
        pyside6-rcc ./resources.qrc -o ./src/qrc_file.py && \
        pyinstaller main.spec --noconfirm --clean
      name: cyclonedds_insight_build
      displayName: Build CycloneDDS-Insight

    # Build Windows Installer
    - task: PowerShell@2
      displayName: 'Inno setup download'
      condition: eq(variables['Agent.OS'], 'Windows_NT')
      inputs:
        targetType: 'inline'
        script: 'choco install innosetup'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: 'iscc.exe setup.iss /DTheAppVersion=0.0.0'
      condition: eq(variables['Agent.OS'], 'Windows_NT')
      name: cyclonedds_insight_build_win_setup
      displayName: Build CycloneDDS-Insight
    - task: PublishPipelineArtifact@1
      condition: eq(variables['Agent.OS'], 'Windows_NT')
      inputs:
        targetPath: dist/cyclonedds-insight-0.0.0-win-x64.exe
        artifactName: cyclonedds-insight-0.0.0-win-x64

    # Ubuntu 20 Installer
    - task: PublishPipelineArtifact@1
      condition: eq(variables['Agent.OS'], 'Linux')
      inputs:
        targetPath: dist/
        artifactName: cyclonedds-insight-0.0.0-ubuntu20-x64
    
    # Bundle MacOS App dmg
    - bash: |
        set -e -x
        ls -al
        brew install create-dmg
        sh ./setup_dmg.sh 0.0.0
      name: cyclonedds_insight_build_dmg
      displayName: Build CycloneDDS-Insight-Dmg
      condition: eq(variables['Agent.OS'], 'Darwin')
    - task: PublishPipelineArtifact@1
      condition: eq(variables['Agent.OS'], 'Darwin')
      inputs:
        targetPath: dist/cyclonedds-insight-0.0.0-darwin-x64.dmg
        artifactName: cyclonedds-insight-0.0.0-mac-x64
