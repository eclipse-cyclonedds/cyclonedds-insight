#
# Copyright(c) 2024 Sven Trittler
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
# v. 1.0 which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause


steps:

  # Setup Python
  - task: UsePythonVersion@0
    displayName: Fetch Python
    inputs:
      versionSpec: '3.10'
      architecture: 'x64'
  - script: python -m pip install --upgrade pip
    displayName: 'Update pip'

  # Build CycloneDDS
  - bash: |
      mkdir -p deps
      cd deps
      git clone https://github.com/eclipse-cyclonedds/cyclonedds.git --branch master
    name: clone_cyclone
    displayName: Clone the CycloneDDS repository
  - bash: |
      set -e -x
      cd deps/cyclonedds
      mkdir -p build
      cd build
      cmake -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=./install \
            -DENABLE_SSL=off -DENABLE_SECURITY=off ..
      cmake --build . --config Release --target install --parallel
    name: cyclonedds_build
    displayName: Build CycloneDDS

  # Build CycloneDDS-Python
  - bash: |
      cd deps
      git clone https://github.com/eclipse-cyclonedds/cyclonedds-python.git --branch master
    name: clone_cyclone_python
    displayName: Clone the CycloneDDS-Python repository
  - bash: |
      set -e -x
      export CYCLONEDDS_HOME=$PWD/deps/cyclonedds/build/install
      cd deps/cyclonedds-python
      python -m pip install -e .
    name: cyclonedds_python_build
    displayName: Build CycloneDDS-Python

  # Generate build_info.py
  - bash: |
      GIT_HASH_SHORT=$(git rev-parse --short HEAD)
      GIT_HASH=$(git rev-parse HEAD)
      cd deps/cyclonedds
      CYCLONEDDS_GIT_HASH_SHORT=$(git rev-parse --short HEAD)
      CYCLONEDDS_GIT_HASH=$(git rev-parse HEAD)
      cd ../cyclonedds-python
      CYCLONEDDS_PYTHON_GIT_HASH_SHORT=$(git rev-parse --short HEAD)
      CYCLONEDDS_PYTHON_GIT_HASH=$(git rev-parse HEAD)
      cd ../..

      echo "CYCLONEDDS_INSIGHT_GIT_HASH_SHORT = \"$GIT_HASH_SHORT\"" > src/build_info.py
      echo "CYCLONEDDS_INSIGHT_GIT_HASH = \"$GIT_HASH\"" >> src/build_info.py
      echo "CYCLONEDDS_INSIGHT_GIT_BRANCH = \"${GIT_BRANCH}\"" >> src/build_info.py
      echo "CYCLONEDDS_INSIGHT_BUILD_ID = \"${BUILD_ID}\"" >> src/build_info.py
      echo "CYCLONEDDS_INSIGHT_BUILD_PIPELINE_ID = \"${BUILD_PIPELINE_ID}\"" >> src/build_info.py
      echo "CYCLONEDDS_GIT_HASH_SHORT = \"$CYCLONEDDS_GIT_HASH_SHORT\"" >> src/build_info.py
      echo "CYCLONEDDS_GIT_HASH = \"$CYCLONEDDS_GIT_HASH\"" >> src/build_info.py
      echo "CYCLONEDDS_PYTHON_GIT_HASH_SHORT = \"$CYCLONEDDS_PYTHON_GIT_HASH_SHORT\"" >> src/build_info.py
      echo "CYCLONEDDS_PYTHON_GIT_HASH = \"$CYCLONEDDS_PYTHON_GIT_HASH\"" >> src/build_info.py
    displayName: Generate build_info.py

    # Get Version
  - bash: |
      version=$(python src/version.py)
      echo "###vso[task.setvariable variable=version;]$version"
    displayName: Capture Version
    name: versionStep

  # Build CycloneDDS-Insight
  - bash: |
      set -e -x
      export CYCLONEDDS_HOME=$PWD/deps/cyclonedds/build/install
      export CYCLONEDDS_PYTHON_HOME=$PWD/deps/cyclonedds-python
      export PATH=$PATH:$CYCLONEDDS_HOME/bin
      python -m pip install -r ./requirements.txt && \
      pyside6-rcc ./resources.qrc -o ./src/qrc_file.py && \
      DYLD_LIBRARY_PATH="$CYCLONEDDS_HOME/lib" \
      LD_LIBRARY_PATH="$CYCLONEDDS_HOME/lib:$LD_LIBRARY_PATH" \
      pyinstaller main.spec --noconfirm --clean
      if [ "$(uname)" == "Linux" ]; then
          pyinstaller src/updater.py --onefile --name Updater -i "NONE" --distpath "./dist/CycloneDDS Insight" --noconsole --noconfirm --clean
      fi
    name: cyclonedds_insight_build
    displayName: Build CycloneDDS-Insight

  # Build Windows Installer
  - task: PowerShell@2
    displayName: 'Inno setup download'
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    inputs:
      targetType: 'inline'
      script: 'choco install innosetup'
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: 'iscc.exe setup.iss /DTheAppVersion=$(VERSION)'
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    name: cyclonedds_insight_build_win_setup
    displayName: Build CycloneDDS-Insight
  - task: PublishPipelineArtifact@1
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    inputs:
      targetPath: dist/cyclonedds-insight-$(version)-windows-x64.exe
      artifactName: cyclonedds-insight-$(version)-windows-x64

  # Linux Bundle
  - bash: |
      set -e -x
      cd dist
      tar -czf cyclonedds-insight-${VERSION}-linux-x64.tar.gz "CycloneDDS Insight"
    name: cyclonedds_insight_build_lnx_tgz
    displayName: Build CycloneDDS-Insight-Tgz
    condition: eq(variables['Agent.OS'], 'Linux')
  - task: PublishPipelineArtifact@1
    condition: eq(variables['Agent.OS'], 'Linux')
    inputs:
      targetPath: dist/cyclonedds-insight-$(version)-linux-x64.tar.gz
      artifactName: cyclonedds-insight-$(version)-linux-x64

  # Debian Package
  - bash: |
      set -e -x
      ./create_debian_pkg.sh ${VERSION} amd64
    name: cyclonedds_insight_build_debian_pkg
    displayName: Build CycloneDDS-Insight-Debian-Pkg
    condition: eq(variables['Agent.OS'], 'Linux')
  - task: PublishPipelineArtifact@1
    condition: eq(variables['Agent.OS'], 'Linux')
    inputs:
      targetPath: dist/cyclonedds-insight_$(version)_amd64.deb
      artifactName: cyclonedds-insight-$(version)-debian-x64

  # MacOS Bundle
  - bash: |
      set -e -x
      mkdir -p dist/bundle
      cd dist
      cp -r "CycloneDDS Insight.app" bundle && \
      cd bundle
      tar -czf cyclonedds-insight-${VERSION}-macos-x64.tar.gz CycloneDDS\ Insight.app
    name: cyclonedds_insight_build_bundle
    displayName: Bundle MacOs App
    condition: eq(variables['Agent.OS'], 'Darwin')
  - task: PublishPipelineArtifact@1
    condition: eq(variables['Agent.OS'], 'Darwin')
    inputs:
      targetPath: dist/bundle/cyclonedds-insight-$(version)-macos-x64.tar.gz
      artifactName: cyclonedds-insight-$(version)-macos-x64
